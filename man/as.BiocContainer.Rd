% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/as.BiocAssayContainers.R
\name{as.DGEList}
\alias{as.DGEList}
\alias{as.DGEList.matrix}
\alias{as.DGEList.data.frame}
\alias{as.DGEList.tbl_sql}
\alias{as.DGEList.FacileDataSet}
\alias{as.ExpressionSet}
\alias{as.ExpressionSet.data.frame}
\alias{as.ExpressionSet.FacileDataSet}
\alias{as.SummarizedExperiment}
\alias{as.SummarizedExperiment.data.frame}
\alias{as.SummarizedExperiment.FacileDataSet}
\title{Converts a "facile object" to a traditional Bioconductor assay container}
\usage{
as.DGEList(x, ...)

\method{as.DGEList}{matrix}(x, covariates = TRUE, feature_ids = NULL,
  assay_name = default_assay(.fds), .fds = fds(x),
  custom_key = Sys.getenv("USER"), ...)

\method{as.DGEList}{data.frame}(x, covariates = TRUE,
  feature_ids = NULL, assay_name = default_assay(.fds),
  .fds = fds(x), custom_key = Sys.getenv("USER"), ...)

\method{as.DGEList}{tbl_sql}(x, covariates = TRUE, feature_ids = NULL,
  assay_name = default_assay(.fds), .fds = fds(x),
  custom_key = Sys.getenv("USER"), ...)

\method{as.DGEList}{FacileDataSet}(x, covariates = TRUE,
  feature_ids = NULL, assay_name = default_assay(x),
  custom_key = Sys.getenv("USER"), ...)

as.ExpressionSet(x, ...)

\method{as.ExpressionSet}{data.frame}(x, covariates = TRUE,
  feature_ids = NULL, assay_name = default_assay(.fds),
  .fds = fds(x), custom_key = Sys.getenv("USER"), ...)

\method{as.ExpressionSet}{FacileDataSet}(x, covariates = TRUE,
  feature_ids = NULL, assay_name = default_assay(.fds),
  .fds = fds(x), custom_key = Sys.getenv("USER"), ...)

as.SummarizedExperiment(x, ...)

\method{as.SummarizedExperiment}{data.frame}(x, covariates = TRUE,
  feature_ids = NULL, assay_name = default_assay(.fds),
  .fds = fds(x), custom_key = Sys.getenv("USER"), ...)

\method{as.SummarizedExperiment}{FacileDataSet}(x, covariates = TRUE,
  feature_ids = NULL, assay_name = default_assay(.fds),
  .fds = fds(x), custom_key = Sys.getenv("USER"), ...)
}
\arguments{
\item{x}{a facile expression-like result}

\item{...}{dots, passed on}

\item{covariates}{The covariates the user wants to add to the $samples of
the DGEList. This can take the following forms:
- `TRUE`: All covariates are retrieved from the `FacileDataSet`
- `FALSE`: TODO: Better handle FALSE
- `character`: A vector of covariate names to fetch from the
  `FacileDataSet`. Must be elements of `names(sample_definitions(x))`
- `data.frame`: A table that looks like a subset of the
  `sample_covariate` table, which will be transformed into the `pData`.
  This may be external covariates for samples not available within
  `x` (yet), ie. a table of covariates provided by a third party.
- `NULL`: do not decorate with *any* covariates.}

\item{feature_ids}{the features to get expression for (if not specified
in `x` descriptor). These correspond to the elements found in the
`feature_info_tbl(x)$feature_id` column.}

\item{assay_name}{the name of the assay matrix to use when populating the
default assay matrix of the bioconductor container (the `$counts`
matrix of a `DGEList`, the `exprs()` of an `ExpressionSet`, etc.).
The default value is the entry provided by [default_assay()]}

\item{.fds}{The `FacileDataSet` that `x` was retrieved from}

\item{custom_key}{the custom key to use to fetch custom annotations from
`.fds`}

\item{x}{result of fetch_assay_data}

\item{covariates}{character, of pData columns to fetch}

\item{feature_ids}{two-column tibble of dataset,feature_id to filter features}

\item{assay_name}{single character, e.g. 'rnaseq'}

\item{.fds}{FacileDataSet}

\item{custom_key}{single character, e.g. user ID for looking up custom covariates}
}
\value{
the appropriate bioconductor assay container, ie. a [edgeR::DGEList]
  for `as.DGEList`, an [Biobase::ExpressionSet] for `as.ExpressionSet`, or
  a [SummarizedExperiment::SummarizedExperiment] for
  `as.SummarizedExperiment`.

a \code{\link[Biobase]{ExpressionSet}}

a \code{\link[SummarizedExperiment]{SummarizedExperiment}}
}
\description{
An entire `FacileDataSet` or a subset of it can be converted into
bioconductor-standard assay containers, like a `SummarizedExperiment`,
`DGEList`, or `ExpressionSet` "at any time" using various `as.XXX` functions,
like `as.DGEList(...)`.
}
\details{
We use the term "facile object" to refer to either the entirety of a
`FacileDataStore` or any sample-descriptor that specifies subsets of the
data, eg. where `fds(x)` returns a `FacileDataStore`. See examples for
specifics.
}
\examples{
fds <- exampleFacileDataSet()

# Retrieve DGEList of gene expression for all samples
y.all <- as.DGEList(fds) # gene expression of all samples

# Retrieve data for only 3 genes
# Suppose we only wanted female samples in our DGEList
y.fem <- fds \%>\%
  filter_samples(sex == "f") \%>\%
  as.DGEList() # or `as.ExpressionSet()`
}
