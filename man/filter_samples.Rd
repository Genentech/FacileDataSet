% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/NSE-filter-samples.R
\name{filter_samples}
\alias{filter_samples}
\title{Filter against the sample_covariate_tbl EAV table as if it were wide.}
\usage{
filter_samples(x, ..., with_covariates = FALSE)
}
\arguments{
\item{x}{A \code{FacileDataSet}}

\item{...}{NSE claused to use in \code{\link[dplyr]{filter}} expressions}
}
\value{
a sample-descriptor \code{data.frame} that includes the dataset,sample_id
pairs that match the virtual \code{filter(covaries, ...)} clause executed here.
}
\description{
This allows the user to query the \code{FacileDataSet} as if it were a wide
\code{pData} \code{data.frame} of all its covariates.
}
\details{
This feature is implemented so poorly. It's only really meant to be used
interactively, and with extreme caution ... programatically specifcying
the covariates, for instance, does not work right now.

TODO: Professionaly implement this. You will minimally want to use \code{tidyeval}
}
\examples{
fds <- exampleFacileDataSet()

# To identify all samples that are of "CMS3" or "CMS4" subtype(
# stored in the "subtype_crc_cms" covariate:
crc.34 <- filter_samples(fds, subtype_crc_cms \%in\% c("CMS3", "CMS4"))
eav.query <- sample_covariate_tbl(fds) \%>\%
  filter(variable == "subtype_crc_cms", value \%in\% c("CMS3", "CMS4")) \%>\%
  collect
setequal(crc.34$sample_id, eav.query$sample_id)
}
